{"version":3,"file":"static/js/957.9210c15c.chunk.js","mappings":"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","sources":["API/Constants.js","API/API.js","common/Validations.js","pages/UserAuthentication/PasswordManagement/ForgetPassword/PasswordRecoveryWithEmail.js","redux/apis/PasswordRecoveryApi.js","redux/actions/PasswordRecoveryActions.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["\r\nexport const BASE_URL = \"http://64.227.181.53:3000/\"; // current working url\r\nexport const STATUS_CODE = {\r\n  INTERNAL_SERVER_ERROR: 500,\r\n  SUCCESS: 200,\r\n};\r\n","import axios from \"axios\";\r\nimport { STATUS_CODE, BASE_URL } from \"./Constants\";\r\nimport { toast } from \"react-toastify\";\r\n// Request Methods\r\nconst METHOD = {\r\n  GET: \"get\",\r\n  POST: \"post\",\r\n  PUT: \"put\",\r\n  DELETE: \"delete\",\r\n};\r\n/*\r\n * API controller that for handling the request\r\n */\r\nclass API {\r\n  isLoggedIn = false;\r\n  userData = {};\r\n  userToken = null;\r\n  constructor() {\r\n    this.baseURL = BASE_URL;\r\n  }\r\n  get(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.GET, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n  post(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.POST, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n          // console.log('response',response);\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n        });\r\n    });\r\n  }\r\n  put(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.PUT, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n        });\r\n    });\r\n  }\r\n  delete(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.DELETE, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n  // Main function with hold the axios request param\r\n  api(method, url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      let axiosConfig = {};\r\n      axiosConfig.method = method;\r\n      axiosConfig.url = this.baseURL + url;\r\n      axiosConfig.headers = this.setHeaders(data);\r\n      if (data) {\r\n        // if (data) axiosConfig.params = data;\r\n        if (data) axiosConfig.data = data;\r\n      }\r\n\r\n      axios(axiosConfig)\r\n        .then((response) => {\r\n          if (\r\n            response &&\r\n            response.status === STATUS_CODE.INTERNAL_SERVER_ERROR\r\n          ) {\r\n            alert(\"Something went wrong!!\");\r\n          } else {\r\n            // resolve(response.data);  \r\n            resolve(response);\r\n            if (response) {\r\n              console.log('response', response);\r\n              toast.success(response.data?.message); \r\n            }\r\n          }\r\n          // console.log(\"response\", response);\r\n        })\r\n        .catch((error) => {\r\n          let err = error?.response;\r\n          let errData = error?.response.data;\r\n          console.log(\"ERROR\", error);\r\n          // switch (true) {\r\n          //   case error.response?.data?.email[0] === \"has already been taken\":\r\n          //     toast.error(`Email ${error.response?.data?.email[0]}`);\r\n          //     break;\r\n          //   case error.response.data?.phone_number[0] ===\r\n          //     \"has already been taken\":\r\n          //     toast.error(\r\n          //       `Mobile Number ${error.response?.data?.phone_number[0]}`\r\n          //     );\r\n          //     break;\r\n          //   default:\r\n          //     // Handle other errors if needed\r\n          //     break;\r\n          // }\r\n          // console.log(\"phone_number\", error.response.data?.phone_number[0]);\r\n          // if(\r\n          //   error.response.data?.phone_number[0] === \"has already been taken\"\r\n          // ) {\r\n          //   toast.error(\r\n          //     `Mobile Number ${error.response.data?.phone_number[0]}`\r\n          //   );\r\n          // }\r\n          // if (error.response.data?.email[0] === 'has already been taken') {\r\n          // toast.error(`email ${error.response.data?.email[0]}`);\r\n          // }\r\n          if (\r\n            error.response.data?.email &&\r\n            error.response.data.email.length > 0\r\n          ) {\r\n            toast.error(`Email ${error.response.data.email[0]}`);\r\n          } else if (\r\n            error.response.data?.phone_number &&\r\n            error.response.data.phone_number.length > 0\r\n          ) {\r\n            toast.error(`Mobile Number ${error.response.data.phone_number[0]}`);\r\n          } else if (\r\n            error.response.data.message &&\r\n            error.response.data.message.length > 0\r\n          ) {\r\n            toast.error(`${error.response.data.message}`);\r\n          } else if(err?.status===401){\r\n            toast.error(`${errData.errors}`);\r\n          } else {\r\n            toast.error(\"An error occurred\");\r\n          }\r\n          //DEFAULT ERROR HANDLING\r\n        });\r\n    });\r\n  }\r\n  // Set the header for request\r\n  setHeaders(data) {\r\n    let headers = {};\r\n    headers[\"accept-language\"] = \"en\";\r\n    headers[\"Content-Type\"] = \"application/json\";\r\n    headers[\"Accept\"] = \"application/json\";\r\n    headers[\"Authorization\"] = localStorage.getItem(\"token\");\r\n    if (data) {\r\n      if (data.isMultipart) {\r\n        headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      }\r\n      if (data.headers) {\r\n        for (var key in data.headers) {\r\n          if (data.headers.hasOwnProperty(key)) {\r\n            headers[key] = data.headers[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return headers;\r\n  }\r\n}\r\nexport default API;\r\n","import * as Yup from \"yup\";\r\nconst generateValidationSchema = (fields) => {\r\n  const validationRules = {};\r\n  fields.forEach((field) => {\r\n    switch (field) {\r\n      case \"name\":\r\n        validationRules.name = Yup.string()\r\n          .min(2, \"Name is Short!\")\r\n          .max(50, \"Name is Long!\")\r\n          .required(\"Name is required\");\r\n        break;\r\n      case \"email\":\r\n        validationRules.email = Yup.string()\r\n          .email(\"Invalid email address format\")\r\n          .required(\"Email is required\");\r\n        break;\r\n      case \"mobile_number\":\r\n        validationRules.mobile_number = Yup.string()\r\n          .required(\"Mobile Number is required\")\r\n          .matches(/^[6-9][0-9]{9}$/, \"Invalid Mobile Number\");\r\n        break;\r\n      case \"phone_number\":\r\n        validationRules.phone_number = Yup.string()\r\n          .required(\"Phone Number is required\")\r\n          .matches(/^[6-9][0-9]{9}$/, \"Invalid Phone Number\");\r\n        break;\r\n      case \"relationship\":\r\n        validationRules.relationship = Yup.string()\r\n          .min(3, \"Relationship is Short!\")\r\n          .max(50, \"Relationship is Long!\")\r\n          .required(\"Relationship is required\");\r\n        break;\r\n      case \"address\":\r\n        validationRules.address = Yup.string()\r\n          .min(5, \"Address is Short!\")\r\n          .max(100, \"Address is Long!\")\r\n          .required(\"Address is required\");\r\n        break;\r\n      case \"first_name\":\r\n        validationRules.first_name = Yup.string()\r\n          .min(2, \"First Name is Short!\")\r\n          .max(50, \"First Name is Long!\")\r\n          .required(\"First Name is required\");\r\n        break;\r\n      case \"last_name\":\r\n        validationRules.last_name = Yup.string()\r\n          .min(2, \"Last Name is Short!\")\r\n          .max(50, \"Last Name is Long!\")\r\n          .required(\"Last Name is required\");\r\n        break;\r\n      case \"password\":\r\n        validationRules.password = Yup.string()\r\n          .min(8, \"Password should be at least 8 characters\")\r\n          .required(\"Password is required\");\r\n        // .validateSync(value, { abortEarly: false }) || \"\";\r\n        break;\r\n      case \"new_password\":\r\n        validationRules.new_password = Yup.string()\r\n          .min(8, \"New Password should be at least 8 characters\")\r\n          .required(\"New Password is required\");\r\n        // .validateSync(value, { abortEarly: false }) || \"\";\r\n        break;\r\n      case \"password_confirmation\":\r\n        validationRules.password_confirmation = Yup.string()\r\n          .min(8, \"Password should be at least 8 characters\")\r\n          .required(\"Confirm Password is required\");\r\n        // .validateSync(value, { abortEarly: false }) || \"\";\r\n        break;\r\n\r\n      // Add additional fields as needed\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n \r\n  return Yup.object(validationRules);\r\n};\r\n \r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  mobile_number: \"\",\r\n  relationship: \"\",\r\n  address: \"\",\r\n  first_name: \"\",\r\n  password: \"\",\r\n  password_confirmation: \"\"\r\n  \r\n};\r\n \r\nexport { initialValues, generateValidationSchema };","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { toast } from \"react-toastify\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport { FormLabel, TextField } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  initialValues,\r\n  generateValidationSchema,\r\n} from \"../../../../common/Validations\";\r\nimport { PasswordRecoveryInitiate } from \"../../../../redux/actions/PasswordRecoveryActions\";\r\nconst PasswordRecoveryWithEmail = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const receivedData = location?.state;\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      dispatch(PasswordRecoveryInitiate(values, navigate));\r\n    } catch (error) {}\r\n  };\r\n  const formFields = [\"email\"];\r\n  const validationSchema = generateValidationSchema(formFields);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      type: \"email_account\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => handleSubmit(values),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        component=\"main\"\r\n        maxWidth=\"xs\"\r\n        sx={{\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Box>\r\n          <Paper\r\n            elevation={1}\r\n            variant=\"elevation\"\r\n            square={false}\r\n            sx={{\r\n              // maxWidth: 400,\r\n              mx: \"auto\", // margin left & right\r\n              my: 15, // margin top & botom\r\n              py: 3, // padding top & bottom\r\n              px: 2, // padding left & right\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: 2,\r\n              borderRadius: \"sm\",\r\n              // boxShadow: \"md\",\r\n              // boxShadow: '0px 10px 80px rgba(0, 0, 0, 0.1)',\r\n              bgcolor: \"#fff\",\r\n              // color: \"orange\",\r\n            }}\r\n            // variant=\"outlined\"\r\n          >\r\n            <Typography textAlign=\"left\" variant=\"h6\" mt={2}>\r\n              Password Assistance With Email Id\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit} style={{ marginTop: \"20px\" }}>\r\n              <FormControl fullWidth>\r\n                <FormLabel\r\n                  sx={{\r\n                    marginBottom: \"10px\",\r\n                    color: \"#000\",\r\n                    fontWeight: 400,\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                >\r\n                  Enter Your Email Id\r\n                </FormLabel>\r\n                <TextField\r\n                  placeholder=\"enter your email id\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  size=\"small\"\r\n                  value={formik.values.email}\r\n                  onBlur={formik.handleBlur}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n              </FormControl>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                sx={{\r\n                  mt: 2,\r\n                  mb: 2, // margin top\r\n                  color: \"#111\",\r\n                  bgcolor: \"#FFD814\",\r\n                  borderColor: \"#FCD200\",\r\n                  borderRadius: \"md\",\r\n                  textDecoration: \"none\",\r\n                  textTransform: \"none\",\r\n                  \"&:hover\": {\r\n                    bgcolor: \"#FCD200\",\r\n                  },\r\n                }}\r\n              >\r\n                Send OTP\r\n              </Button>\r\n              <Grid\r\n                container\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-end\"\r\n                sx={{\r\n                  marginBottom: \"8px\",\r\n                  gap: 1,\r\n                  color: \"#9e9e9e\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body1\">Already a member ?</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password ?\r\n                  </Link> */}\r\n                  <Link\r\n                    underline=\"none\"\r\n                    variant=\"body1\"\r\n                    onClick={() => navigate(\"/login\")}\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Paper>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordRecoveryWithEmail;\r\n","import API from \"../../API/API.js\";\r\nconst api = new API();\r\nconst endPoints = \"/forgot_password\";\r\nexport const passwordRecoveryApi = async (users) => {\r\n  // console.log('users in api', users);\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const result = await api.post(`${endPoints}`, users);\r\n      console.log(\"result in api\", result);\r\n      resolve(result);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport { passwordRecoveryApi } from \"../apis/PasswordRecoveryApi\";\r\n// resend otp actions details\r\nexport const createPasswordRecoveryStart = (users) =>\r\n  // console.log('users', users),\r\n  ({\r\n    type: types.CREATE_PASSWORD_RECOVERY_START,\r\n    payload: users,\r\n  });\r\nexport const createPasswordRecoverySuccess = () => ({\r\n  type: types.CREATE_PASSWORD_RECOVERY_SUCCESS,\r\n});\r\nexport const createPasswordRecoveryError = (error) => ({\r\n  type: types.CREATE_PASSWORD_RECOVERY_ERROR,\r\n  payload: error,\r\n});\r\nexport const PasswordRecoveryInitiate = (user, navigate) => {\r\n  return function (dispatch) {\r\n    dispatch(createPasswordRecoveryStart(user));\r\n    passwordRecoveryApi(user)\r\n      .then((res) => {\r\n        console.log('res',res);\r\n        let email = res.data?.account.email;\r\n        let phone_number = res.data?.account.phone_number;\r\n        let id = res.data?.account.id;\r\n        let userData = {};\r\n        dispatch(createPasswordRecoverySuccess(res));\r\n        if (res.status === 200) {\r\n          if (email && id) {\r\n            userData = { email: email, id: id };\r\n            navigate(\"/otp/otpverifyfornewpassword\", { state: userData });\r\n          } if (phone_number && id) {\r\n            userData = { phone_number: phone_number, id: id };\r\n            navigate(\"/otp/otpverifyfornewpassword\", { state: userData });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => dispatch(createPasswordRecoveryError(error.message)));\r\n  };\r\n};\r\nexport default {\r\n  PasswordRecoveryInitiate,\r\n};\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["STATUS_CODE","METHOD","constructor","isLoggedIn","userData","userToken","this","baseURL","get","url","data","Promise","resolve","reject","api","then","response","catch","error","console","log","post","put","delete","method","axiosConfig","headers","setHeaders","axios","_response$data","status","alert","toast","success","message","_error$response$data","_error$response$data2","err","errData","email","length","concat","phone_number","errors","localStorage","getItem","isMultipart","key","hasOwnProperty","generateValidationSchema","fields","validationRules","forEach","field","name","Yup","min","max","required","mobile_number","matches","relationship","address","first_name","last_name","password","new_password","password_confirmation","PasswordRecoveryWithEmail","location","useLocation","navigate","useNavigate","dispatch","useDispatch","validationSchema","state","formik","useFormik","initialValues","type","onSubmit","values","async","PasswordRecoveryInitiate","handleSubmit","_jsx","_Fragment","children","Container","component","maxWidth","sx","margin","Box","_jsxs","Paper","elevation","variant","square","mx","my","py","px","display","flexDirection","gap","borderRadius","bgcolor","Typography","textAlign","mt","style","marginTop","FormControl","fullWidth","FormLabel","marginBottom","color","fontWeight","fontSize","TextField","placeholder","id","size","value","onBlur","handleBlur","onChange","handleChange","touched","Boolean","helperText","Button","mb","borderColor","textDecoration","textTransform","Grid","container","justifyContent","cursor","item","Link","underline","onClick","API","user","users","types","payload","result","passwordRecoveryApi","res","_res$data","_res$data2","_res$data3","account","createPasswordRecoveryError","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","_ref","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","overridesResolver","props","styles","root","capitalize","button","_extends","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","padding","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useThemeProps","className","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}