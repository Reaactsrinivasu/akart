{"version":3,"file":"static/js/244.852539bc.chunk.js","mappings":"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","sources":["pages/UserAuthentication/Login/Login.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport { FormLabel } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { googleLogout, useGoogleLogin } from \"@react-oauth/google\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport { useNavigate,useLocation} from \"react-router-dom\";\r\nconst GoogleIcon = \"assets/imgs/google.png\";\r\nconst FacebookIcon = \"assets/imgs/facebook.png\";\r\n\r\n\r\nconst Login = () => {\r\n  const [profile, setProfile] = useState();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const preData = location?.state;\r\n  //  console.log(\"preData\", preData);\r\n  const [credential, setCredential] = useState(preData);\r\n  \r\n  const handleSubmit = (event) => {\r\n    // event.preventDefault();\r\n    // Determine whether the entered value is an email or mobile number\r\n    const isEmail = /^\\S+@\\S+\\.\\S+$/.test(credential);\r\n    const isMobileNumber = /^\\d{10}$/.test(credential);\r\n\r\n\r\n     if (isEmail) {\r\n       navigate(\"/login/email\", { state: credential });\r\n     } else if (isMobileNumber) {\r\n       // Redirect to login with mobile number page\r\n       navigate(\"/login/mobile\", { state: credential });\r\n     } else {\r\n       // Handle invalid input\r\n       alert(\"Invalid email or mobile number\");\r\n     }\r\n\r\n    // const data = new FormData(event.currentTarget);\r\n    // console.log(\"credential\", credential);\r\n  };\r\n  // {\r\n  //   // email: data.get(\"email\"),\r\n  //   // password: data.get(\"password\"),\r\n  //   (\"credential\");\r\n  // }\r\n  // const login = useGoogleLogin({\r\n  //   onSuccess: (codeResponse) => setUser(codeResponse),\r\n  //   onError: (error) => console.log(\"Login Failed:\", error),\r\n  // });\r\n  const login = useGoogleLogin({\r\n    // onSuccess: (tokenResponse) => console.log(tokenResponse),\r\n    onSuccess: async (response) => {\r\n      try {\r\n        const res = await axios\r\n          .get(\r\n            `https://www.googleapis.com/oauth2/v1/userinfo?access_token=${response.access_token}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${response.access_token}`,\r\n                Accept: \"application/json\",\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            setProfile(res.data);\r\n            // console.log('res', res);\r\n          })\r\n          .catch((err) => console.log(err));\r\n        // console.log('res',res)\r\n      } catch (err) {\r\n        // console.log(err);\r\n      }\r\n    }\r\n  });\r\n  const responseFacebook = (response) => {\r\n    // console.log(response.picture?.data.url);\r\n  setProfile(response);\r\n  };\r\n  // const profiePic = profile?.picture?.data.url;\r\n  // console.log(\"profile\", profile?.picture);\r\nconst logOut = () => {\r\n  googleLogout();\r\n  setProfile(null);\r\n};\r\n\r\n const authHandler = (err, data) => {\r\n  //  console.log(\"insta data\",err, data);\r\n };\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      {profile ? (\r\n        <div>\r\n          <h3>User Logged in</h3>\r\n          <img src={profile?.picture} alt=\"user pic\" />\r\n          <Typography variant=\"h5\">Welcome {profile.name}</Typography>\r\n          <Typography variant=\"h6\">email:{profile.email}</Typography>\r\n          <br />\r\n          <br />\r\n          <Button\r\n            onClick={logOut}\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2, textTransform: \"none\" }}\r\n          >\r\n            Log out\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <Box>\r\n          <Paper\r\n            elevation={1}\r\n            variant=\"elevation\"\r\n            square={false}\r\n            sx={{\r\n              marginTop: 8,\r\n              padding: \"10px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              bgcolor: \"#fff\",\r\n              // borderRadius: \"10px\",\r\n              // boxShadow: \"10px\",\r\n            }}\r\n          >\r\n            <Typography component=\"h1\" variant=\"h5\" mt={2}>\r\n              Sign In\r\n            </Typography>\r\n            <Box\r\n              // component=\"form\"\r\n              // onSubmit={handleSubmit}\r\n              // noValidate\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <FormControl fullWidth>\r\n                <FormLabel\r\n                  sx={{\r\n                    marginBottom: \"10px\",\r\n                    color: \"#000\",\r\n                    forntWeight: 400,\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                >\r\n                  Enter email or mobile number\r\n                </FormLabel>\r\n                <OutlinedInput\r\n                  placeholder=\"email or mobile number\"\r\n                  size=\"small\"\r\n                  type=\"text\"\r\n                  value={credential}\r\n                  onChange={(e) => setCredential(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Button\r\n                  // type=\"submit\"\r\n                  onClick={(e)=>handleSubmit(e)}\r\n                fullWidth\r\n                // variant=\"contained\"\r\n                // sx={{ mt: 3, mb: 2, textTransform: \"none\" }}\r\n                sx={{\r\n                  mt: 3,\r\n                  mb: 2, // margin top\r\n                  color: \"#111\",\r\n                  bgcolor: \"#FFD814\",\r\n                  borderColor: \"#FCD200\",\r\n                  borderRadius: \"md\",\r\n                  textDecoration: \"none\",\r\n                  textTransform: \"none\",\r\n                  \"&:hover\": {\r\n                    bgcolor: \"#FCD200\",\r\n                  },\r\n                }}\r\n              >\r\n                Continue\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  {/* <Link href=\"#\" variant=\"body2\">\r\n                      Forgot password?\r\n                    </Link> */}\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    // href=\"#\"\r\n                    variant=\"body2\"\r\n                    underline=\"none\"\r\n                    sx={{ cursor: \"pointer\" }}\r\n                    onClick={() => navigate(\"/signup\")}\r\n                  >\r\n                    {\"Not a memeber ? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider\r\n                // variant=\"middle\"\r\n                sx={{\r\n                  marginRight: \"-10px\",\r\n                  // marginLeft:'-10px',\r\n                  marginTop: \"10px\",\r\n                  // marginBottom: \"5px\",\r\n                  \"& .MuiDivider-wrapper\": {\r\n                    marginLeft: \"-8px\",\r\n                    marginRight: \"-8px\",\r\n                  },\r\n                }}\r\n              >\r\n                <Chip label=\"or\" size=\"small\" />\r\n              </Divider>\r\n              <ButtonGroup\r\n                fullWidth\r\n                orientation=\"vertical\"\r\n                sx={{ marginBottom: \"15px\" }}\r\n              >\r\n                <Button\r\n                  onClick={() => login()}\r\n                  // variant=\"contained\"\r\n                  startIcon={\r\n                    <img\r\n                      alt=\"google\"\r\n                      src={GoogleIcon}\r\n                      style={{ width: \"22px\", height: \"22px\" }}\r\n                    />\r\n                  }\r\n                  sx={{\r\n                    mt: 3,\r\n                    mb: 2,\r\n                    color: \"#111\",\r\n                    fontWeight: 500,\r\n                    fontSize: \"15px\",\r\n                    textTransform: \"none\",\r\n                    backgroundColor: \" #F0F4F8\",\r\n                    border: \"none\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \" #F0F4F8\",\r\n                      border: \"none\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Continue with Google\r\n                </Button>\r\n                {/* <Button\r\n                  // variant=\"contained\"\r\n                  startIcon={\r\n                    <img\r\n                      alt=\"google\"\r\n                      src={FacebookIcon}\r\n                      style={{ width: \"21px\", height: \"21px\" }}\r\n                    />\r\n                  }\r\n                  sx={{\r\n                    mt: 3,\r\n                    mb: 2,\r\n                    color: \"#111\",\r\n                    fontWeight: 500,\r\n                    fontSize: \"15px\",\r\n                    textTransform: \"none\",\r\n                    backgroundColor: \" #F0F4F8\",\r\n                    border: \"none\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \" #F0F4F8\",\r\n                      border: \"none\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Continue with Facebook\r\n                </Button> */}\r\n                {/* <FacebookLogin\r\n                  appId=\"1537947807067024\"\r\n                  autoLoad={true}\r\n                  fields=\"name,email,picture\"\r\n                  // onClick={componentClicked}\r\n                  callback={responseFacebook}\r\n                /> */}\r\n                <FacebookLogin\r\n                  appId=\"519056126982535\"\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={responseFacebook}\r\n                  render={(renderProps) => (\r\n                    // <button onClick={renderProps.onClick}>\r\n                    //   This is my custom FB button\r\n                    // </button>\r\n                    <Button\r\n                      // variant=\"contained\"\r\n                      onClick={renderProps.onClick}\r\n                      startIcon={\r\n                        <img\r\n                          alt=\"facebook\"\r\n                          src={FacebookIcon}\r\n                          style={{ width: \"24px\", height: \"24px\" }}\r\n                        />\r\n                      }\r\n                      sx={{\r\n                        mt: 3,\r\n                        mb: 2,\r\n                        color: \"#111\",\r\n                        fontWeight: 500,\r\n                        fontSize: \"15px\",\r\n                        textTransform: \"none\",\r\n                        backgroundColor: \" #F0F4F8\",\r\n                        border: \"none\",\r\n                        \"&:hover\": {\r\n                          backgroundColor: \" #F0F4F8\",\r\n                          border: \"none\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Continue with Facebook\r\n                    </Button>\r\n                  )}\r\n                />\r\n                {/* <Button\r\n                  // variant=\"contained\"\r\n                  startIcon={\r\n                    <img\r\n                      alt=\"instagram\"\r\n                      src={Instagram}\r\n                      style={{ width: \"24px\", height: \"24px\" }}\r\n                    />\r\n                  }\r\n                  sx={{\r\n                    mt: 3,\r\n                    mb: 2,\r\n                    color: \"#111\",\r\n                    fontWeight: 500,\r\n                    fontSize: \"15px\",\r\n                    textTransform: \"none\",\r\n                    backgroundColor: \" #F0F4F8\",\r\n                    border: \"none\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \" #F0F4F8\",\r\n                      border: \"none\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Continue with Twitter\r\n                </Button>\r\n                <InstagramLogin\r\n                  authCallback={authHandler}\r\n                  appId={instAppId}\r\n                  appSecret={instSecretId}\r\n                  redirectUri={redirect_url}\r\n                /> */}\r\n              </ButtonGroup>\r\n            </Box>\r\n          </Paper>\r\n          {/* <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar> */}\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default Login;\r\n"],"names":["Login","profile","setProfile","useState","location","useLocation","navigate","useNavigate","preData","state","credential","setCredential","login","useGoogleLogin","onSuccess","async","axios","get","concat","response","access_token","headers","Authorization","Accept","then","res","data","catch","err","console","log","_jsx","Container","component","maxWidth","sx","margin","children","_jsxs","src","picture","alt","Typography","variant","name","email","Button","onClick","logOut","googleLogout","mt","mb","textTransform","Box","Paper","elevation","square","marginTop","padding","display","flexDirection","alignItems","bgcolor","FormControl","fullWidth","FormLabel","marginBottom","color","forntWeight","fontSize","OutlinedInput","placeholder","size","type","value","onChange","e","target","event","isEmail","test","isMobileNumber","alert","handleSubmit","borderColor","borderRadius","textDecoration","Grid","container","item","xs","Link","underline","cursor","Divider","marginRight","marginLeft","Chip","label","ButtonGroup","orientation","startIcon","style","width","height","fontWeight","backgroundColor","border","FacebookLogin","appId","autoLoad","fields","callback","render","renderProps"],"sourceRoot":""}