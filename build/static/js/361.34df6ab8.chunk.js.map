{"version":3,"file":"static/js/361.34df6ab8.chunk.js","mappings":"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","sources":["API/Constants.js","API/API.js","redux/apis/otpVerityForNewPasswordApi.js","redux/actions/otpVerifyForNewPasswordActions.js","pages/UserAuthentication/OtpManagement/OtpVerifyForNewPassword.js","redux/apis/resendOtpApi.js","redux/actions/resendOtpActions.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["\r\nexport const BASE_URL = \"http://64.227.181.53:3000/\"; // current working url\r\nexport const STATUS_CODE = {\r\n  INTERNAL_SERVER_ERROR: 500,\r\n  SUCCESS: 200,\r\n};\r\n","import axios from \"axios\";\r\nimport { STATUS_CODE, BASE_URL } from \"./Constants\";\r\nimport { toast } from \"react-toastify\";\r\n// Request Methods\r\nconst METHOD = {\r\n  GET: \"get\",\r\n  POST: \"post\",\r\n  PUT: \"put\",\r\n  DELETE: \"delete\",\r\n};\r\n/*\r\n * API controller that for handling the request\r\n */\r\nclass API {\r\n  isLoggedIn = false;\r\n  userData = {};\r\n  userToken = null;\r\n  constructor() {\r\n    this.baseURL = BASE_URL;\r\n  }\r\n  get(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.GET, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n  post(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.POST, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n          // console.log('response',response);\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n        });\r\n    });\r\n  }\r\n  put(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.PUT, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n        });\r\n    });\r\n  }\r\n  delete(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.api(METHOD.DELETE, url, data)\r\n        .then((response) => {\r\n          resolve(response);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n  // Main function with hold the axios request param\r\n  api(method, url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      let axiosConfig = {};\r\n      axiosConfig.method = method;\r\n      axiosConfig.url = this.baseURL + url;\r\n      axiosConfig.headers = this.setHeaders(data);\r\n       console.log(\"axiosConfig.headers\", axiosConfig.headers);\r\n      if (data) {\r\n        // if (data) axiosConfig.params = data;\r\n        if (data) axiosConfig.data = data;\r\n      }\r\n\r\n      axios(axiosConfig)\r\n        .then((response) => {\r\n          if (\r\n            response &&\r\n            response.status === STATUS_CODE.INTERNAL_SERVER_ERROR\r\n          ) {\r\n            toast.error(\"Something went wrong!!\");\r\n          } else {\r\n            // resolve(response.data);  \r\n            resolve(response);\r\n            if (response) {\r\n              console.log('response', response);\r\n              toast.success(response.data?.messages); \r\n            }\r\n            // else if (response.status === 200) {\r\n            //   toast.success(response.data?.message); \r\n            // }\r\n            // else {\r\n            //   toast.success(\"Something went wrong\"); \r\n            // }\r\n          }\r\n          // console.log(\"response\", response);\r\n        })\r\n        .catch((error) => {\r\n          let err = error?.response;\r\n          let errData = error?.response.data;\r\n          console.log(\"ERROR\", error);\r\n          // switch (true) {\r\n          //   case error.response?.data?.email[0] === \"has already been taken\":\r\n          //     toast.error(`Email ${error.response?.data?.email[0]}`);\r\n          //     break;\r\n          //   case error.response.data?.phone_number[0] ===\r\n          //     \"has already been taken\":\r\n          //     toast.error(\r\n          //       `Mobile Number ${error.response?.data?.phone_number[0]}`\r\n          //     );\r\n          //     break;\r\n          //   default:\r\n          //     // Handle other errors if needed\r\n          //     break;\r\n          // }\r\n          // console.log(\"phone_number\", error.response.data?.phone_number[0]);\r\n          // if(\r\n          //   error.response.data?.phone_number[0] === \"has already been taken\"\r\n          // ) {\r\n          //   toast.error(\r\n          //     `Mobile Number ${error.response.data?.phone_number[0]}`\r\n          //   );\r\n          // }\r\n          // if (error.response.data?.email[0] === 'has already been taken') {\r\n          // toast.error(`email ${error.response.data?.email[0]}`);\r\n          // }\r\n          if (\r\n            error.response.data?.email &&\r\n            error.response.data.email.length > 0\r\n          ) {\r\n            toast.error(`Email ${error.response.data.email[0]}`);\r\n          } else if (\r\n            error.response.data?.phone_number &&\r\n            error.response.data.phone_number.length > 0\r\n          ) {\r\n            toast.error(`Mobile Number ${error.response.data.phone_number[0]}`);\r\n          } else if (\r\n            error.response.data.message &&\r\n            error.response.data.message.length > 0\r\n          ) {\r\n            toast.error(`${error.response.data.message}`);\r\n          } else if(err?.status===401){\r\n            toast.error(`${errData.errors}`);\r\n          } else if (err?.status === 422) {\r\n            toast.error(`${error.response.data.errors}`);\r\n          }else {\r\n            toast.error(\"An error occurred\");\r\n          }\r\n          //DEFAULT ERROR HANDLING\r\n        });\r\n    });\r\n  }\r\n  // Set the header for request\r\n  setHeaders(data) {\r\n    let headers = {};\r\n    headers[\"accept-language\"] = \"en\";\r\n    headers[\"Content-Type\"] = \"application/json\";\r\n    headers[\"Accept\"] = \"application/json\";\r\n    headers[\"Authorization\"] = localStorage.getItem(\"token\");\r\n    if (data) {\r\n      if (data.isMultipart) {\r\n        headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      }\r\n      if (data.headers) {\r\n        for (var key in data.headers) {\r\n          if (data.headers.hasOwnProperty(key)) {\r\n            headers[key] = data.headers[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return headers;\r\n  }\r\n}\r\nexport default API;\r\n","import API from \"../../API/API.js\";\r\nconst api = new API();\r\nconst endPoints = \"/accounts/verify_otp\";\r\nexport const verityOtpForNewPasswordApi = async (users) => {\r\n  // console.log('users in api', users);\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const result = await api.post(`${endPoints}`, users);\r\n      console.log(\"result in api\", result);\r\n      resolve(result);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport { verityOtpForNewPasswordApi } from \"../apis/otpVerityForNewPasswordApi\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n//post signup with email id\r\nexport const verifyOtpForNewPasswordStart = (users) =>\r\n  // console.log('users', users),\r\n  ({\r\n    type: types.VERIFY_OTP_NEW_PASSWORD_START,\r\n    payload: users,\r\n  });\r\nexport const verifyOtpForNewPasswordSuccess = () => ({\r\n  type: types.VERIFY_OTP_NEW_PASSWORD_SUCCESS,\r\n});\r\nexport const verifyOtpForNewPasswordError = (error) => ({\r\n  type: types.VERIFY_OTP_NEW_PASSWORD_ERROR,\r\n  payload: error,\r\n});\r\nexport const verifyOtpForNewPasswordInitiate = (user, navigate) => {\r\n  console.log(\"userin otpverify\", user);\r\n  return function (dispatch) {\r\n    dispatch(verifyOtpForNewPasswordStart(user));\r\n    verityOtpForNewPasswordApi(user)\r\n      .then((res) => {\r\n        // let mobile = res.data?.account.phone_number;\r\n        let id = res.data?.account.id;\r\n        let userData = {id: id };\r\n        console.log('res',res);\r\n        dispatch(verifyOtpForNewPasswordSuccess(res));\r\n        if (res.status === 200) {\r\n          navigate(\"/createnewpwd\", { state: userData });\r\n        }\r\n      })\r\n      .catch((error) => dispatch(verifyOtpForNewPasswordError(error.message)));\r\n  };\r\n};\r\nexport default {\r\n  verifyOtpForNewPasswordInitiate,\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport { FormLabel, TextField } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Input from \"@mui/material/Input\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { verifyOtpForNewPasswordInitiate, } from \"../../../redux/actions/otpVerifyForNewPasswordActions\";\r\nimport { resendOtpInitiate } from \"../../../redux/actions/resendOtpActions\";\r\nconst OTPInputVerificationBlock = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [timer, setTimer] = useState(60);\r\n  const [isResendDisabled, setResendDisabled] = useState(true);\r\n  const [otpValues, setOtpValues] = useState([\"\", \"\", \"\", \"\"]);\r\n  const otpFieldsRef = useRef([]);\r\n  const receivedData = location?.state;\r\n  // console.log(\"receivedData in otpverify form  email sign up\", receivedData);\r\n  // useEffect(() => {\r\n  //   // Your OTP timer logic here (e.g., countdown from 5 minutes)\r\n  //   const countdownMinutes = 1;\r\n  //   let seconds = countdownMinutes * 60;\r\n  //   const intervalId = setInterval(() => {\r\n  //     seconds--;\r\n  //     const minutes = Math.floor(seconds / 60);\r\n  //     const remainingSeconds = seconds % 60;\r\n  //     const formattedTime = `${String(minutes).padStart(2, \"0\")}:${String(\r\n  //       remainingSeconds\r\n  //     ).padStart(2, \"0\")}`;\r\n  //     setTimer(formattedTime);\r\n  //     if (seconds === 0) {\r\n  //       setResendDisabled(false);\r\n  //       clearInterval(intervalId);\r\n  //     }\r\n  //   }, 1000);\r\n  //   return () => clearInterval(intervalId); // Cleanup the interval on unmount\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (timer > 0) {\r\n      intervalId = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n    } else {\r\n      setResendDisabled(false); // Enable the resend button when timer reaches 0\r\n      clearInterval(intervalId);\r\n    }\r\n\r\n    return () => clearInterval(intervalId); // Cleanup the interval on unmount\r\n  }, [timer]);\r\n  const formattedTimer = `${String(Math.floor(timer / 60)).padStart(\r\n    2,\r\n    \"0\"\r\n  )}:${String(timer % 60).padStart(2, \"0\")}`;\r\n\r\n  const handleInput = (index, value) => {\r\n    if (value.length > 1) {\r\n      return;\r\n    }\r\n    const newOtpValues = [...otpValues];\r\n    newOtpValues[index] = value;\r\n    setOtpValues(newOtpValues);\r\n    if (value.length === 1 && index < otpValues.length - 1) {\r\n      otpFieldsRef.current[index + 1].focus();\r\n    }\r\n  };\r\n  const handleBackspace = (index) => {\r\n    if (otpValues[index] !== \"\") {\r\n      const newOtpValues = [...otpValues];\r\n      newOtpValues[index] = \"\";\r\n      setOtpValues(newOtpValues);\r\n    } else if (index > 0) {\r\n      otpFieldsRef.current[index - 1].focus();\r\n    }\r\n  };\r\n  const handleVerification = () => {\r\n    const enteredOtp = otpValues.join(\"\");\r\n    if (receivedData?.email) {\r\n      dispatch(\r\n        verifyOtpForNewPasswordInitiate(\r\n          {\r\n            otp: enteredOtp,\r\n            email: receivedData.email,\r\n            account_id: receivedData.id,\r\n          },\r\n          navigate\r\n        )\r\n      );\r\n    } else if (receivedData?.phone_number) {\r\n      dispatch(\r\n        verifyOtpForNewPasswordInitiate(\r\n          {\r\n            otp: enteredOtp,\r\n            phone_number: receivedData.phone_number.toString(),\r\n            account_id: receivedData.id,\r\n          },\r\n          navigate\r\n        )\r\n      );\r\n    } else {\r\n      // Handle other errors if needed\r\n      alert(\"An error occurred\");\r\n    }\r\n    setOtpValues([\"\", \"\", \"\", \"\"]);\r\n    // Add your verification logic here\r\n  };\r\n  const handleResendClick = () => {\r\n    if (receivedData?.email) {\r\n      dispatch(\r\n        resendOtpInitiate(\r\n          {\r\n            email: receivedData.email,\r\n            account_id: receivedData.id,\r\n          },\r\n          navigate\r\n        )\r\n      );\r\n    } else if (receivedData?.phone_number) {\r\n      dispatch(\r\n        resendOtpInitiate(\r\n          {\r\n            phone_number: receivedData.phone_number.toString(),\r\n            account_id: receivedData.id,\r\n          },\r\n          navigate\r\n        )\r\n      );\r\n    } else {\r\n      // Handle other errors if needed\r\n      alert(\"An error occurred\");\r\n    }\r\n    setTimer(60);\r\n    setResendDisabled(true);\r\n    // Handle resend OTP logic here\r\n    // setResendDisabled(false);\r\n    // setTimer(\"01:00\"); // Reset timer to 5 minutes on resend\r\n    // Additional logic to send a new OTP\r\n    // console.log(\"Resending OTP...\");\r\n  };\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      <Box>\r\n        <Paper\r\n          elevation={1}\r\n          variant=\"elevation\"\r\n          square={false}\r\n          sx={{\r\n            marginTop: 8,\r\n            padding: \"10px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            bgcolor: \"#fff\",\r\n            // borderRadius: \"10px\",\r\n            // boxShadow: \"10px\",\r\n          }}\r\n        >\r\n          <Typography mt={2}>\r\n            Please Enter OTP Sent To{\" \"}\r\n            <Link sx={{ textDecoration: \"none\", cursor: \"pointer\" }}>\r\n              {receivedData?.email\r\n                ? receivedData?.email\r\n                : receivedData?.phone_number}\r\n            </Link>{\" \"}\r\n          </Typography>\r\n          <Link\r\n            sx={{\r\n              //   textAlign: \"center\",\r\n              //   marginLeft: \"30px\",\r\n              textDecoration: \"none\",\r\n              fontSize: \"15px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Change ?\r\n          </Link>\r\n          <Box\r\n            // component=\"form\"\r\n            // onSubmit={handleSubmit}\r\n            // noValidate\r\n            sx={{ padding: \"15px\" }}\r\n          >\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"nowrap\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {otpValues.map((digit, index) => (\r\n                <Grid item key={index}>\r\n                  <TextField\r\n                    variant=\"standard\"\r\n                    autoComplete=\"off\"\r\n                    size=\"small\"\r\n                    value={digit}\r\n                    onChange={(e) => handleInput(index, e.target.value)}\r\n                    inputProps={{\r\n                      maxLength: 1,\r\n                      style: { textAlign: \"center\", maxWidth: \"4rem\" },\r\n                    }}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Backspace\") {\r\n                        handleBackspace(index);\r\n                      }\r\n                    }}\r\n                    inputRef={(ref) => {\r\n                      otpFieldsRef.current[index] = ref;\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <Button\r\n              onClick={() => handleVerification()}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2, // margin top\r\n                color: \"#111\",\r\n                bgcolor: \"#FFD814\",\r\n                borderColor: \"#FCD200\",\r\n                borderRadius: \"md\",\r\n                textDecoration: \"none\",\r\n                textTransform: \"none\",\r\n                borderRadius: \"8px\",\r\n                \"&:hover\": {\r\n                  bgcolor: \"#FCD200\",\r\n                },\r\n              }}\r\n            >\r\n              Verify\r\n            </Button>\r\n\r\n            <Grid container sx={{ marginBottom: \"8px\" }}>\r\n              <Grid item xs>\r\n                <Typography sx={{ fontSize: \"14px\" }}>\r\n                  not recieved your code ? {formattedTimer}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <Link href=\"#\" variant=\"body2\" component='button' underline=\"none\" sx={{backgroundColor:'green',color:'#eee',borderRadius:'5px'}}>\r\n                  Resend\r\n                </Link> */}\r\n\r\n                <Button\r\n                  color=\"success\"\r\n                  disabled={isResendDisabled}\r\n                  onClick={handleResendClick}\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    width: \"15px\",\r\n                    height: \"25px\",\r\n                    color: \"#FFFCFC\",\r\n                    bgcolor: \"#2C7E34\",\r\n                    borderColor: \"#2C7E34\",\r\n                    borderRadius: \"md\",\r\n                    textDecoration: \"none\",\r\n                    textTransform: \"none\",\r\n                    borderRadius: \"8px\",\r\n                    fontSize: \"12px\",\r\n                    marginTop: \"-10px\",\r\n                    \"&:hover\": {\r\n                      bgcolor: \"#2C7E34\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Resend\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OTPInputVerificationBlock;\r\n","import API from \"../../API/API.js\";\r\nconst api = new API();\r\nconst endPoints = \"accounts/resend_otp\";\r\nexport const createResendOtpApi = async (users) => {\r\n  // console.log('users in api', users);\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const result = await api.post(`${endPoints}`, users);\r\n      console.log(\"result in api\", result);\r\n      resolve(result);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport { createResendOtpApi } from \"../apis/resendOtpApi\";\r\n// resend otp actions details \r\nexport const createResendOtpStart = (users) =>\r\n  // console.log('users', users),\r\n  ({\r\n    type: types.CREATE_RESEND_OTP_START,\r\n    payload: users,\r\n  });\r\nexport const createResendOtpSuccess = () => ({\r\n  type: types.CREATE_RESEND_OTP_SUCCESS,\r\n});\r\nexport const createResendOtpError = (error) => ({\r\n  type: types.CREATE_RESEND_OTP_ERROR,\r\n  payload: error,\r\n});\r\nexport const resendOtpInitiate = (user, navigate) => {\r\n  return function (dispatch) {\r\n    dispatch(createResendOtpStart(user));\r\n    createResendOtpApi(user)\r\n      .then((res) => {\r\n        // let email = res.data?.account.email;\r\n        // let id = res.data?.account.id;\r\n        // let userData = { email: email, id: id };\r\n        console.log(res);\r\n        dispatch(createResendOtpSuccess(res));\r\n        // if (res.status === 201) {\r\n        //   navigate(\"/otp/otpverify\", { state: userData });\r\n        // }\r\n      })\r\n      .catch((error) => dispatch(createResendOtpError(error.message)));\r\n  };\r\n};\r\nexport default {\r\n  resendOtpInitiate,\r\n};\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["STATUS_CODE","METHOD","constructor","isLoggedIn","userData","userToken","this","baseURL","get","url","data","Promise","resolve","reject","api","then","response","catch","error","console","log","post","put","delete","method","axiosConfig","headers","setHeaders","axios","_response$data","status","toast","success","messages","_error$response$data","_error$response$data2","err","errData","email","length","concat","phone_number","message","errors","localStorage","getItem","isMultipart","key","hasOwnProperty","API","verifyOtpForNewPasswordInitiate","user","navigate","dispatch","users","type","types","payload","async","result","verityOtpForNewPasswordApi","res","_res$data","id","account","state","verifyOtpForNewPasswordError","OTPInputVerificationBlock","location","useLocation","useNavigate","useDispatch","otp","setOtp","useState","timer","setTimer","isResendDisabled","setResendDisabled","otpValues","setOtpValues","otpFieldsRef","useRef","receivedData","useEffect","intervalId","setInterval","prevTimer","clearInterval","formattedTimer","String","Math","floor","padStart","_jsx","Container","component","maxWidth","sx","margin","children","Box","_jsxs","Paper","elevation","variant","square","marginTop","padding","display","flexDirection","alignItems","bgcolor","Typography","mt","Link","textDecoration","cursor","fontSize","Grid","container","spacing","flexWrap","justifyContent","map","digit","index","item","TextField","autoComplete","size","value","onChange","e","handleInput","newOtpValues","current","focus","target","inputProps","maxLength","style","textAlign","onKeyDown","handleBackspace","inputRef","ref","Button","onClick","handleVerification","enteredOtp","join","account_id","toString","alert","fullWidth","mb","color","borderColor","borderRadius","textTransform","marginBottom","xs","disabled","handleResendClick","resendOtpInitiate","width","height","createResendOtpApi","createResendOtpError","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","_ref","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","name","overridesResolver","props","styles","root","capitalize","underline","button","_extends","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","Object","keys","includes","Array","isArray"],"sourceRoot":""}